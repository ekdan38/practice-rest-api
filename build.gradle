plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0' //
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.1' //
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testRuntimeOnly 'com.h2database:h2'

    implementation 'pl.pragmatists:JUnitParams:1.1.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor // Asciidoctor 작업이 먼저 수행된 후 실행

    from("${asciidoctor.outputDir}") // Asciidoctor로 생성된 문서가 있는 경로
    into 'src/main/resources/static/docs' // 실제 로컬 디렉터리에 복사할 경로
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn asciidoctor
    println("start bootjar")
    println("${asciidoctor.outputDir}")
    from ("${asciidoctor.outputDir}") {
        into 'src/main/resources/static/docs'
    }
}